#BlueJ class context
comment0.target=ArrayLists
comment1.params=list1\ list2
comment1.target=java.util.ArrayList\ addShit(java.util.ArrayList,\ java.util.ArrayList)
comment1.text=addShit\ should\ append\ the\ contents\ of\ list2\ to\ the\ end\ \r\nof\ list1.
comment2.params=list1\ list2
comment2.target=java.lang.Integer\ addShitTogether(java.util.ArrayList,\ java.util.ArrayList)
comment2.text=addShitTogether\ should\ sum\ up\ all\ of\ the\ values\ in\ \r\nlist1\ and\ list2\ and\ return\ that\ value.
comment3.params=original\ toRemove
comment3.target=java.util.ArrayList\ removeAll(java.util.ArrayList,\ java.lang.Integer)
comment3.text=removeAll\ should\ remove\ all\ instances\ of\ toRemove\ from\ original\ \r\nand\ return\ an\ ArrayList.
comment4.params=original
comment4.target=boolean\ happyList(java.util.ArrayList)
comment4.text=happyList\ determines\ if\ a\ ArrayList<String>\ that\ gets\ passed\ in\ is\ \r\n\ \ \ \ happy\ or\ not.\ A\ list\ is\ happy\ if\ and\ only\ if\ all\ of\ it's\ elements\ \r\n\ \ \ \ are\ happy.\ An\ element\ is\ happy\ if\ it\ shares\ a\ character\ with\ the\ \r\n\ \ \ \ string\ behind\ it\ and\ if\ it\ shares\ a\ character\ with\ the\ string\ in\ \r\n\ \ \ \ front\ of\ it.\ (Both\ conditions\ if\ applicable)\ The\ characters\ that\ it\ \r\n\ \ \ \ shares\ with\ its\ neighbors\ do\ not\ have\ to\ be\ the\ same\ character\ as\ \r\nthe\ elements\ can\ be\ happy\ with\ everyone\ doing\ their\ own\ thing.
numComments=5
